Index: src/main/java/com/kior/blog/Main.java
===================================================================
diff --git a/src/main/java/com/kior/blog/Main.java b/src/main/java/com/kior/blog/Main.java
deleted file mode 100644
--- a/src/main/java/com/kior/blog/Main.java	(revision d9e713d6d1426a63c6a352902f01f39547627135)
+++ /dev/null	(revision d9e713d6d1426a63c6a352902f01f39547627135)
@@ -1,17 +0,0 @@
-package com.kior.blog;
-
-//TIP 코드를 <b>실행</b>하려면 <shortcut actionId="Run"/>을(를) 누르거나
-// 에디터 여백에 있는 <icon src="AllIcons.Actions.Execute"/> 아이콘을 클릭하세요.
-public class Main {
-    public static void main(String[] args) {
-        //TIP 캐럿을 강조 표시된 텍스트에 놓고 <shortcut actionId="ShowIntentionActions"/>을(를) 누르면
-        // IntelliJ IDEA이(가) 수정을 제안하는 것을 확인할 수 있습니다.
-        System.out.printf("Hello and welcome!");
-
-        for (int i = 1; i <= 5; i++) {
-            //TIP <shortcut actionId="Debug"/>을(를) 눌러 코드 디버그를 시작하세요. 1개의 <icon src="AllIcons.Debugger.Db_set_breakpoint"/> 중단점을 설정해 드렸습니다
-            // 언제든 <shortcut actionId="ToggleLineBreakpoint"/>을(를) 눌러 중단점을 더 추가할 수 있습니다.
-            System.out.println("i = " + i);
-        }
-    }
-}
\ No newline at end of file
Index: src/test/java/com/kior/blog/springboot/web/HelloControllerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/com/kior/blog/springboot/web/HelloControllerTest.java b/src/test/java/com/kior/blog/springboot/web/HelloControllerTest.java
new file mode 100644
--- /dev/null	(date 1741013884788)
+++ b/src/test/java/com/kior/blog/springboot/web/HelloControllerTest.java	(date 1741013884788)
@@ -0,0 +1,29 @@
+package com.kior.blog.springboot.web;
+
+import org.junit.jupiter.api.Test;
+import org.junit.jupiter.api.extension.ExtendWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
+import org.springframework.test.context.junit.jupiter.SpringExtension;
+import org.springframework.test.web.servlet.MockMvc;
+
+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
+
+@ExtendWith(SpringExtension.class)
+@WebMvcTest(controllers = HelloController.class)
+public class HelloControllerTest {
+
+    @Autowired
+    private MockMvc mvc;
+
+    @Test
+    public void helloToreturn() throws Exception {
+        String hello = "HELLO KIOR BLOG";
+
+        mvc.perform(get("/hello"))
+                .andExpect(status().isOk())
+                .andExpect(content().string(hello));
+    }
+}
\ No newline at end of file
Index: src/main/java/com/kior/blog/springboot/Application.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/kior/blog/springboot/Application.java b/src/main/java/com/kior/blog/springboot/Application.java
new file mode 100644
--- /dev/null	(date 1741013843404)
+++ b/src/main/java/com/kior/blog/springboot/Application.java	(date 1741013843404)
@@ -0,0 +1,11 @@
+package com.kior.blog.springboot;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class Application {
+    public static void main(String[] args) {
+        SpringApplication.run(Application.class, args);
+    }
+}
Index: src/main/java/com/kior/blog/springboot/web/HelloController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/kior/blog/springboot/web/HelloController.java b/src/main/java/com/kior/blog/springboot/web/HelloController.java
new file mode 100644
--- /dev/null	(date 1741012906082)
+++ b/src/main/java/com/kior/blog/springboot/web/HelloController.java	(date 1741012906082)
@@ -0,0 +1,12 @@
+package com.kior.blog.springboot.web;
+
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+@RestController
+public class HelloController {
+    @GetMapping("/hello")
+    public String hello() {
+        return "HELLO KIOR BLOG";
+    }
+}
Index: build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n    id(\"org.springframework.boot\") version \"2.7.18\"\n    id(\"io.spring.dependency-management\") version \"1.1.4\"\n    id(\"java\")\n}\n\ngroup = \"com.kior.blog\"\nversion = \"1.0-SNAPSHOT\"\njava.sourceCompatibility = JavaVersion.VERSION_1_8\n\nrepositories {\n    mavenCentral()\n    ㅓ\n}\n\ndependencies {\n    implementation(\"org.springframework.boot:spring-boot-starter-web\")\n    testImplementation(\"org.springframework.boot:spring-boot-starter-test\")\n}\n\ntasks.test {\n    useJUnitPlatform()\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle.kts b/build.gradle.kts
--- a/build.gradle.kts	(revision d9e713d6d1426a63c6a352902f01f39547627135)
+++ b/build.gradle.kts	(date 1741012922612)
@@ -10,7 +10,6 @@
 
 repositories {
     mavenCentral()
-    ㅓ
 }
 
 dependencies {
